extern fn sizeof(t: type['a]) -> int

trait Eq['a] {
    fn ==('a, 'a) -> 'a
}

impl Eq[int] {
    extern fn ==(a: int, b: int) -> int
}

impl Eq[i8] {
    extern fn ==(a: i8, b: i8) -> i8
}

impl Eq[i16] {
    extern fn ==(a: i16, b: i16) -> i16
}

struct List['a] {
    ptr: *'a
    size: uint
}
