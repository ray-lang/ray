// This is the core library for Ray
extern fn sizeof(t: type['a]) -> uint
extern fn malloc(size: uint) -> *u8

@inline()
fn ptr_add(ptr: *'a, n: uint) -> *'a =>
    ((ptr as uint) + n) as *'a

@inline()
fn ptr_sub(ptr: *'a, n: uint) -> *'a =>
    ((ptr as uint) - n) as *'a
